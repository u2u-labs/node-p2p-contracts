{
	"id": "2f143dbdbc91921d8181587d77ecc3bc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NodeFee.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\";\nimport \"contracts/interfaces/INodesStorage.sol\";\n\ncontract NodeFee is Ownable {\n address public nodeStorageContract;\n    mapping(address => bool) public feeLogs;\n\n    modifier onlyNode() {\n        INodesStorage(nodeStorageContract).isValidNode(msg.sender);\n        require(!feeLogs[msg.sender], \"Reported already\");\n        _;\n    }\n}\n"
			},
			"contracts/interfaces/INodesStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface INodesStorage {\n    function addNodes(address[] calldata _nodeAddresses) external;\n\n    function removeNode(address nodeAddress) external;\n\n    function getValidNodes() external view returns (address[] memory);\n\n    function isValidNode(address nodeAddress) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.9.6/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NodeFee.sol": {
				"NodeFee": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "feeLogs",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nodeStorageContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NodeFee.sol\":166:450  contract NodeFee is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/NodeFee.sol\":166:450  contract NodeFee is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":708:715  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":734:744  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":727:744  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/NodeFee.sol\":166:450  contract NodeFee is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NodeFee.sol\":166:450  contract NodeFee is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xefe6621a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfd78b66d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NodeFee.sol\":237:276  mapping(address => bool) public feeLogs */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/NodeFee.sol\":197:231  address public nodeStorageContract */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_27\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_27:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_30\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_31\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NodeFee.sol\":237:276  mapping(address => bool) public feeLogs */\n    tag_17:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_34\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_28\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_36:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_39\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_31\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NodeFee.sol\":197:231  address public nodeStorageContract */\n    tag_24:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_28:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_41\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_42\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1422:1429  owner() */\n      tag_43\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1422:1427  owner */\n      tag_11\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_31:\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.9.6/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_49:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_50:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_67\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_49\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_51:\n        /* \"#utility.yul\":328:352   */\n      tag_69\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_50\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_13:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_71\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_51\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_53:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_55:\n        /* \"#utility.yul\":993:1017   */\n      tag_76\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_50\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_77:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_56:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_79\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_55\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_16:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_82\n      tag_53\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1269:1388   */\n    tag_81:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_83\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_56\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1618   */\n    tag_57:\n        /* \"#utility.yul\":1562:1569   */\n      0x00\n        /* \"#utility.yul\":1605:1610   */\n      dup2\n        /* \"#utility.yul\":1598:1611   */\n      iszero\n        /* \"#utility.yul\":1591:1612   */\n      iszero\n        /* \"#utility.yul\":1580:1612   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1624:1733   */\n    tag_58:\n        /* \"#utility.yul\":1705:1726   */\n      tag_86\n        /* \"#utility.yul\":1720:1725   */\n      dup2\n        /* \"#utility.yul\":1705:1726   */\n      tag_57\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1700:1703   */\n      dup3\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"#utility.yul\":1624:1733   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1949   */\n    tag_19:\n        /* \"#utility.yul\":1826:1830   */\n      0x00\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1853:1862   */\n      dup3\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"#utility.yul\":1841:1867   */\n      swap1\n      pop\n        /* \"#utility.yul\":1877:1942   */\n      tag_88\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1877:1942   */\n      tag_58\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1739:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_59:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2355   */\n    tag_60:\n        /* \"#utility.yul\":2270:2304   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2305   */\n      mstore\n        /* \"#utility.yul\":2339:2347   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2334:2336   */\n      0x20\n        /* \"#utility.yul\":2326:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2337   */\n      add\n        /* \"#utility.yul\":2315:2348   */\n      mstore\n        /* \"#utility.yul\":2130:2355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2361:2727   */\n    tag_61:\n        /* \"#utility.yul\":2503:2506   */\n      0x00\n        /* \"#utility.yul\":2524:2591   */\n      tag_92\n        /* \"#utility.yul\":2588:2590   */\n      0x26\n        /* \"#utility.yul\":2583:2586   */\n      dup4\n        /* \"#utility.yul\":2524:2591   */\n      tag_59\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2517:2591   */\n      swap2\n      pop\n        /* \"#utility.yul\":2600:2693   */\n      tag_93\n        /* \"#utility.yul\":2689:2692   */\n      dup3\n        /* \"#utility.yul\":2600:2693   */\n      tag_60\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2718:2720   */\n      0x40\n        /* \"#utility.yul\":2713:2716   */\n      dup3\n        /* \"#utility.yul\":2709:2721   */\n      add\n        /* \"#utility.yul\":2702:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2361:2727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2733:3152   */\n    tag_38:\n        /* \"#utility.yul\":2899:2903   */\n      0x00\n        /* \"#utility.yul\":2937:2939   */\n      0x20\n        /* \"#utility.yul\":2926:2935   */\n      dup3\n        /* \"#utility.yul\":2922:2940   */\n      add\n        /* \"#utility.yul\":2914:2940   */\n      swap1\n      pop\n        /* \"#utility.yul\":2986:2995   */\n      dup2\n        /* \"#utility.yul\":2980:2984   */\n      dup2\n        /* \"#utility.yul\":2976:2996   */\n      sub\n        /* \"#utility.yul\":2972:2973   */\n      0x00\n        /* \"#utility.yul\":2961:2970   */\n      dup4\n        /* \"#utility.yul\":2957:2974   */\n      add\n        /* \"#utility.yul\":2950:2997   */\n      mstore\n        /* \"#utility.yul\":3014:3145   */\n      tag_95\n        /* \"#utility.yul\":3140:3144   */\n      dup2\n        /* \"#utility.yul\":3014:3145   */\n      tag_61\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3006:3145   */\n      swap1\n      pop\n        /* \"#utility.yul\":2733:3152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3340   */\n    tag_62:\n        /* \"#utility.yul\":3298:3332   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3286:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3296   */\n      add\n        /* \"#utility.yul\":3275:3333   */\n      mstore\n        /* \"#utility.yul\":3158:3340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3346:3712   */\n    tag_63:\n        /* \"#utility.yul\":3488:3491   */\n      0x00\n        /* \"#utility.yul\":3509:3576   */\n      tag_98\n        /* \"#utility.yul\":3573:3575   */\n      0x20\n        /* \"#utility.yul\":3568:3571   */\n      dup4\n        /* \"#utility.yul\":3509:3576   */\n      tag_59\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3502:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3585:3678   */\n      tag_99\n        /* \"#utility.yul\":3674:3677   */\n      dup3\n        /* \"#utility.yul\":3585:3678   */\n      tag_62\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3698:3701   */\n      dup3\n        /* \"#utility.yul\":3694:3706   */\n      add\n        /* \"#utility.yul\":3687:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3346:3712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3718:4137   */\n    tag_46:\n        /* \"#utility.yul\":3884:3888   */\n      0x00\n        /* \"#utility.yul\":3922:3924   */\n      0x20\n        /* \"#utility.yul\":3911:3920   */\n      dup3\n        /* \"#utility.yul\":3907:3925   */\n      add\n        /* \"#utility.yul\":3899:3925   */\n      swap1\n      pop\n        /* \"#utility.yul\":3971:3980   */\n      dup2\n        /* \"#utility.yul\":3965:3969   */\n      dup2\n        /* \"#utility.yul\":3961:3981   */\n      sub\n        /* \"#utility.yul\":3957:3958   */\n      0x00\n        /* \"#utility.yul\":3946:3955   */\n      dup4\n        /* \"#utility.yul\":3942:3959   */\n      add\n        /* \"#utility.yul\":3935:3982   */\n      mstore\n        /* \"#utility.yul\":3999:4130   */\n      tag_101\n        /* \"#utility.yul\":4125:4129   */\n      dup2\n        /* \"#utility.yul\":3999:4130   */\n      tag_63\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3991:4130   */\n      swap1\n      pop\n        /* \"#utility.yul\":3718:4137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220864e47579a9cbb1039121a3810c0af6cfe05f59fcd2c2dd9bff46b4c861e38f064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 49,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 56,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061002c61002161003160201b60201c565b61003860201b60201c565b6100f9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61054f806101065f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063715018a6146100595780638da5cb5b14610063578063efe6621a14610081578063f2fde38b146100b1578063fd78b66d146100cd575b5f80fd5b6100616100eb565b005b61006b6100fe565b604051610078919061036e565b60405180910390f35b61009b600480360381019061009691906103b5565b610125565b6040516100a891906103fa565b60405180910390f35b6100cb60048036038101906100c691906103b5565b610142565b005b6100d56101c4565b6040516100e2919061036e565b60405180910390f35b6100f36101e9565b6100fc5f610267565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002602052805f5260405f205f915054906101000a900460ff1681565b61014a6101e9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101af90610493565b60405180910390fd5b6101c181610267565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101f1610328565b73ffffffffffffffffffffffffffffffffffffffff1661020f6100fe565b73ffffffffffffffffffffffffffffffffffffffff1614610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906104fb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103588261032f565b9050919050565b6103688161034e565b82525050565b5f6020820190506103815f83018461035f565b92915050565b5f80fd5b6103948161034e565b811461039e575f80fd5b50565b5f813590506103af8161038b565b92915050565b5f602082840312156103ca576103c9610387565b5b5f6103d7848285016103a1565b91505092915050565b5f8115159050919050565b6103f4816103e0565b82525050565b5f60208201905061040d5f8301846103eb565b92915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61047d602683610413565b915061048882610423565b604082019050919050565b5f6020820190508181035f8301526104aa81610471565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6104e5602083610413565b91506104f0826104b1565b602082019050919050565b5f6020820190508181035f830152610512816104d9565b905091905056fea2646970667358221220864e47579a9cbb1039121a3810c0af6cfe05f59fcd2c2dd9bff46b4c861e38f064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x31 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x54F DUP1 PUSH2 0x106 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xEFE6621A EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xFD78B66D EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0xFC PUSH0 PUSH2 0x267 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1E9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x267 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x328 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20F PUSH2 0xFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x358 DUP3 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x368 DUP2 PUSH2 0x34E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x381 PUSH0 DUP4 ADD DUP5 PUSH2 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x34E JUMP JUMPDEST DUP2 EQ PUSH2 0x39E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AF DUP2 PUSH2 0x38B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0x387 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3D7 DUP5 DUP3 DUP6 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D PUSH0 DUP4 ADD DUP5 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x47D PUSH1 0x26 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x488 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4AA DUP2 PUSH2 0x471 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E5 PUSH1 0x20 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F0 DUP3 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x512 DUP2 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4E SELFBALANCE JUMPI SWAP11 SWAP13 0xBB LT CODECOPY SLT BYTE CODESIZE LT 0xC0 0xAF PUSH13 0xFE05F59FCD2C2DD9BFF46B4C86 0x1E CODESIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "166:284:2:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;166:284:2;;655:96:1;708:7;734:10;727:17;;655:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;166:284:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 489,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 808,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 615,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeLogs_154": {
									"entryPoint": 293,
									"id": 154,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nodeStorageContract_150": {
									"entryPoint": 452,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 254,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 235,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 322,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4140:4",
										"nodeType": "YulBlock",
										"src": "0:4140:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "633:35:4",
													"nodeType": "YulBlock",
													"src": "633:35:4",
													"statements": [
														{
															"nativeSrc": "643:19:4",
															"nodeType": "YulAssignment",
															"src": "643:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:4",
																		"nodeType": "YulLiteral",
																		"src": "659:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:4"
																},
																"nativeSrc": "653:9:4",
																"nodeType": "YulFunctionCall",
																"src": "653:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:4",
														"nodeType": "YulTypedName",
														"src": "626:6:4",
														"type": ""
													}
												],
												"src": "593:75:4"
											},
											{
												"body": {
													"nativeSrc": "763:28:4",
													"nodeType": "YulBlock",
													"src": "763:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:4",
																		"nodeType": "YulLiteral",
																		"src": "780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:4",
																		"nodeType": "YulLiteral",
																		"src": "783:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:4"
																},
																"nativeSrc": "773:12:4",
																"nodeType": "YulFunctionCall",
																"src": "773:12:4"
															},
															"nativeSrc": "773:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:4"
											},
											{
												"body": {
													"nativeSrc": "886:28:4",
													"nodeType": "YulBlock",
													"src": "886:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:4",
																		"nodeType": "YulLiteral",
																		"src": "903:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:4",
																		"nodeType": "YulLiteral",
																		"src": "906:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:4"
																},
																"nativeSrc": "896:12:4",
																"nodeType": "YulFunctionCall",
																"src": "896:12:4"
															},
															"nativeSrc": "896:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:4"
											},
											{
												"body": {
													"nativeSrc": "963:79:4",
													"nodeType": "YulBlock",
													"src": "963:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:4",
																"nodeType": "YulBlock",
																"src": "1020:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:4"
																			},
																			"nativeSrc": "1022:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:4"
																		},
																		"nativeSrc": "1022:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:4"
																				},
																				"nativeSrc": "993:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:4"
																		},
																		"nativeSrc": "983:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:4"
																},
																"nativeSrc": "976:43:4",
																"nodeType": "YulFunctionCall",
																"src": "976:43:4"
															},
															"nativeSrc": "973:63:4",
															"nodeType": "YulIf",
															"src": "973:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:4",
														"nodeType": "YulTypedName",
														"src": "956:5:4",
														"type": ""
													}
												],
												"src": "920:122:4"
											},
											{
												"body": {
													"nativeSrc": "1100:87:4",
													"nodeType": "YulBlock",
													"src": "1100:87:4",
													"statements": [
														{
															"nativeSrc": "1110:29:4",
															"nodeType": "YulAssignment",
															"src": "1110:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:4"
																},
																"nativeSrc": "1119:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:4"
																},
																"nativeSrc": "1148:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:4"
															},
															"nativeSrc": "1148:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:4",
														"nodeType": "YulTypedName",
														"src": "1078:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:4",
														"nodeType": "YulTypedName",
														"src": "1086:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:4",
														"nodeType": "YulTypedName",
														"src": "1094:5:4",
														"type": ""
													}
												],
												"src": "1048:139:4"
											},
											{
												"body": {
													"nativeSrc": "1259:263:4",
													"nodeType": "YulBlock",
													"src": "1259:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:4",
																"nodeType": "YulBlock",
																"src": "1305:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:4"
																			},
																			"nativeSrc": "1307:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:4"
																		},
																		"nativeSrc": "1307:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:4"
																		},
																		"nativeSrc": "1276:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:4"
																},
																"nativeSrc": "1272:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:4"
															},
															"nativeSrc": "1269:119:4",
															"nodeType": "YulIf",
															"src": "1269:119:4"
														},
														{
															"nativeSrc": "1398:117:4",
															"nodeType": "YulBlock",
															"src": "1398:117:4",
															"statements": [
																{
																	"nativeSrc": "1413:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:4"
																				},
																				"nativeSrc": "1473:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:4"
																		},
																		"nativeSrc": "1452:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:4",
														"nodeType": "YulTypedName",
														"src": "1229:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:4",
														"nodeType": "YulTypedName",
														"src": "1240:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:4",
														"nodeType": "YulTypedName",
														"src": "1252:6:4",
														"type": ""
													}
												],
												"src": "1193:329:4"
											},
											{
												"body": {
													"nativeSrc": "1570:48:4",
													"nodeType": "YulBlock",
													"src": "1570:48:4",
													"statements": [
														{
															"nativeSrc": "1580:32:4",
															"nodeType": "YulAssignment",
															"src": "1580:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1605:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1605:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1598:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:4"
																		},
																		"nativeSrc": "1598:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1598:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1591:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:4"
																},
																"nativeSrc": "1591:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1591:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1580:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1580:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1528:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1552:5:4",
														"nodeType": "YulTypedName",
														"src": "1552:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1562:7:4",
														"nodeType": "YulTypedName",
														"src": "1562:7:4",
														"type": ""
													}
												],
												"src": "1528:90:4"
											},
											{
												"body": {
													"nativeSrc": "1683:50:4",
													"nodeType": "YulBlock",
													"src": "1683:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1700:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1700:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1720:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1720:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1705:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "1705:14:4"
																		},
																		"nativeSrc": "1705:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1693:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:4"
																},
																"nativeSrc": "1693:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1693:34:4"
															},
															"nativeSrc": "1693:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1624:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1671:5:4",
														"nodeType": "YulTypedName",
														"src": "1671:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1678:3:4",
														"nodeType": "YulTypedName",
														"src": "1678:3:4",
														"type": ""
													}
												],
												"src": "1624:109:4"
											},
											{
												"body": {
													"nativeSrc": "1831:118:4",
													"nodeType": "YulBlock",
													"src": "1831:118:4",
													"statements": [
														{
															"nativeSrc": "1841:26:4",
															"nodeType": "YulAssignment",
															"src": "1841:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1853:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1849:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:4"
																},
																"nativeSrc": "1849:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1849:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1841:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:4"
																		},
																		"nativeSrc": "1924:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1877:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "1877:37:4"
																},
																"nativeSrc": "1877:65:4",
																"nodeType": "YulFunctionCall",
																"src": "1877:65:4"
															},
															"nativeSrc": "1877:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "1877:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1739:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1803:9:4",
														"nodeType": "YulTypedName",
														"src": "1803:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1815:6:4",
														"nodeType": "YulTypedName",
														"src": "1815:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1826:4:4",
														"nodeType": "YulTypedName",
														"src": "1826:4:4",
														"type": ""
													}
												],
												"src": "1739:210:4"
											},
											{
												"body": {
													"nativeSrc": "2051:73:4",
													"nodeType": "YulBlock",
													"src": "2051:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2073:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:4"
																},
																"nativeSrc": "2061:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2061:19:4"
															},
															"nativeSrc": "2061:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:4"
														},
														{
															"nativeSrc": "2089:29:4",
															"nodeType": "YulAssignment",
															"src": "2089:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2108:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2104:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:4"
																},
																"nativeSrc": "2104:14:4",
																"nodeType": "YulFunctionCall",
																"src": "2104:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2089:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1955:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2023:3:4",
														"nodeType": "YulTypedName",
														"src": "2023:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2028:6:4",
														"nodeType": "YulTypedName",
														"src": "2028:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2039:11:4",
														"nodeType": "YulTypedName",
														"src": "2039:11:4",
														"type": ""
													}
												],
												"src": "1955:169:4"
											},
											{
												"body": {
													"nativeSrc": "2236:119:4",
													"nodeType": "YulBlock",
													"src": "2236:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2258:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2266:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2254:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:4"
																		},
																		"nativeSrc": "2254:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "2270:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2270:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:4"
																},
																"nativeSrc": "2247:58:4",
																"nodeType": "YulFunctionCall",
																"src": "2247:58:4"
															},
															"nativeSrc": "2247:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "2247:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2326:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2334:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2334:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2322:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:4"
																		},
																		"nativeSrc": "2322:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "2339:8:4",
																		"nodeType": "YulLiteral",
																		"src": "2339:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2315:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:4"
																},
																"nativeSrc": "2315:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2315:33:4"
															},
															"nativeSrc": "2315:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2315:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "2130:225:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2228:6:4",
														"nodeType": "YulTypedName",
														"src": "2228:6:4",
														"type": ""
													}
												],
												"src": "2130:225:4"
											},
											{
												"body": {
													"nativeSrc": "2507:220:4",
													"nodeType": "YulBlock",
													"src": "2507:220:4",
													"statements": [
														{
															"nativeSrc": "2517:74:4",
															"nodeType": "YulAssignment",
															"src": "2517:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2583:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2583:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2588:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2524:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2524:58:4"
																},
																"nativeSrc": "2524:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2524:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2517:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2517:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2689:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2689:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "2600:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "2600:88:4"
																},
																"nativeSrc": "2600:93:4",
																"nodeType": "YulFunctionCall",
																"src": "2600:93:4"
															},
															"nativeSrc": "2600:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "2600:93:4"
														},
														{
															"nativeSrc": "2702:19:4",
															"nodeType": "YulAssignment",
															"src": "2702:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2713:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2713:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2718:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2718:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2709:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:4"
																},
																"nativeSrc": "2709:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2709:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2702:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2702:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2361:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2495:3:4",
														"nodeType": "YulTypedName",
														"src": "2495:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2503:3:4",
														"nodeType": "YulTypedName",
														"src": "2503:3:4",
														"type": ""
													}
												],
												"src": "2361:366:4"
											},
											{
												"body": {
													"nativeSrc": "2904:248:4",
													"nodeType": "YulBlock",
													"src": "2904:248:4",
													"statements": [
														{
															"nativeSrc": "2914:26:4",
															"nodeType": "YulAssignment",
															"src": "2914:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2926:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2922:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:4"
																},
																"nativeSrc": "2922:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2922:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2914:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2961:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2972:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2972:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2957:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:4"
																		},
																		"nativeSrc": "2957:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2957:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2980:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2980:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2986:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2976:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:4"
																		},
																		"nativeSrc": "2976:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2976:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2950:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:4"
																},
																"nativeSrc": "2950:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2950:47:4"
															},
															"nativeSrc": "2950:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2950:47:4"
														},
														{
															"nativeSrc": "3006:139:4",
															"nodeType": "YulAssignment",
															"src": "3006:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3140:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3140:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3014:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "3014:124:4"
																},
																"nativeSrc": "3014:131:4",
																"nodeType": "YulFunctionCall",
																"src": "3014:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3006:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3006:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2733:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2884:9:4",
														"nodeType": "YulTypedName",
														"src": "2884:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2899:4:4",
														"nodeType": "YulTypedName",
														"src": "2899:4:4",
														"type": ""
													}
												],
												"src": "2733:419:4"
											},
											{
												"body": {
													"nativeSrc": "3264:76:4",
													"nodeType": "YulBlock",
													"src": "3264:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3286:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3294:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3294:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3282:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:4"
																		},
																		"nativeSrc": "3282:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "3298:34:4",
																		"nodeType": "YulLiteral",
																		"src": "3298:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3275:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:4"
																},
																"nativeSrc": "3275:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3275:58:4"
															},
															"nativeSrc": "3275:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3275:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "3158:182:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3256:6:4",
														"nodeType": "YulTypedName",
														"src": "3256:6:4",
														"type": ""
													}
												],
												"src": "3158:182:4"
											},
											{
												"body": {
													"nativeSrc": "3492:220:4",
													"nodeType": "YulBlock",
													"src": "3492:220:4",
													"statements": [
														{
															"nativeSrc": "3502:74:4",
															"nodeType": "YulAssignment",
															"src": "3502:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3568:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3573:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3573:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3509:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "3509:58:4"
																},
																"nativeSrc": "3509:67:4",
																"nodeType": "YulFunctionCall",
																"src": "3509:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3502:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3502:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3674:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "3585:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "3585:88:4"
																},
																"nativeSrc": "3585:93:4",
																"nodeType": "YulFunctionCall",
																"src": "3585:93:4"
															},
															"nativeSrc": "3585:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "3585:93:4"
														},
														{
															"nativeSrc": "3687:19:4",
															"nodeType": "YulAssignment",
															"src": "3687:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3698:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3698:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3694:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:4"
																},
																"nativeSrc": "3694:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3694:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3687:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3346:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3480:3:4",
														"nodeType": "YulTypedName",
														"src": "3480:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3488:3:4",
														"nodeType": "YulTypedName",
														"src": "3488:3:4",
														"type": ""
													}
												],
												"src": "3346:366:4"
											},
											{
												"body": {
													"nativeSrc": "3889:248:4",
													"nodeType": "YulBlock",
													"src": "3889:248:4",
													"statements": [
														{
															"nativeSrc": "3899:26:4",
															"nodeType": "YulAssignment",
															"src": "3899:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3911:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3911:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3922:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3922:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3907:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:4"
																},
																"nativeSrc": "3907:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3907:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3899:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3899:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3946:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3946:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3957:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3957:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3942:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3942:3:4"
																		},
																		"nativeSrc": "3942:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3942:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3965:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "3965:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3971:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3971:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3961:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3961:3:4"
																		},
																		"nativeSrc": "3961:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3961:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3935:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:4"
																},
																"nativeSrc": "3935:47:4",
																"nodeType": "YulFunctionCall",
																"src": "3935:47:4"
															},
															"nativeSrc": "3935:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "3935:47:4"
														},
														{
															"nativeSrc": "3991:139:4",
															"nodeType": "YulAssignment",
															"src": "3991:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4125:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4125:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3999:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "3999:124:4"
																},
																"nativeSrc": "3999:131:4",
																"nodeType": "YulFunctionCall",
																"src": "3999:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3991:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3991:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3718:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3869:9:4",
														"nodeType": "YulTypedName",
														"src": "3869:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3884:4:4",
														"nodeType": "YulTypedName",
														"src": "3884:4:4",
														"type": ""
													}
												],
												"src": "3718:419:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063715018a6146100595780638da5cb5b14610063578063efe6621a14610081578063f2fde38b146100b1578063fd78b66d146100cd575b5f80fd5b6100616100eb565b005b61006b6100fe565b604051610078919061036e565b60405180910390f35b61009b600480360381019061009691906103b5565b610125565b6040516100a891906103fa565b60405180910390f35b6100cb60048036038101906100c691906103b5565b610142565b005b6100d56101c4565b6040516100e2919061036e565b60405180910390f35b6100f36101e9565b6100fc5f610267565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002602052805f5260405f205f915054906101000a900460ff1681565b61014a6101e9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101af90610493565b60405180910390fd5b6101c181610267565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101f1610328565b73ffffffffffffffffffffffffffffffffffffffff1661020f6100fe565b73ffffffffffffffffffffffffffffffffffffffff1614610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906104fb565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103588261032f565b9050919050565b6103688161034e565b82525050565b5f6020820190506103815f83018461035f565b92915050565b5f80fd5b6103948161034e565b811461039e575f80fd5b50565b5f813590506103af8161038b565b92915050565b5f602082840312156103ca576103c9610387565b5b5f6103d7848285016103a1565b91505092915050565b5f8115159050919050565b6103f4816103e0565b82525050565b5f60208201905061040d5f8301846103eb565b92915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f61047d602683610413565b915061048882610423565b604082019050919050565b5f6020820190508181035f8301526104aa81610471565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6104e5602083610413565b91506104f0826104b1565b602082019050919050565b5f6020820190508181035f830152610512816104d9565b905091905056fea2646970667358221220864e47579a9cbb1039121a3810c0af6cfe05f59fcd2c2dd9bff46b4c861e38f064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0xEFE6621A EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xFD78B66D EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B PUSH2 0xFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x125 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x36E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0xFC PUSH0 PUSH2 0x267 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1E9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF SWAP1 PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C1 DUP2 PUSH2 0x267 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x328 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20F PUSH2 0xFE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x265 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25C SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x358 DUP3 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x368 DUP2 PUSH2 0x34E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x381 PUSH0 DUP4 ADD DUP5 PUSH2 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x394 DUP2 PUSH2 0x34E JUMP JUMPDEST DUP2 EQ PUSH2 0x39E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3AF DUP2 PUSH2 0x38B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH2 0x3C9 PUSH2 0x387 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3D7 DUP5 DUP3 DUP6 ADD PUSH2 0x3A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x3E0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x40D PUSH0 DUP4 ADD DUP5 PUSH2 0x3EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x47D PUSH1 0x26 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x488 DUP3 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4AA DUP2 PUSH2 0x471 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4E5 PUSH1 0x20 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F0 DUP3 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x512 DUP2 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x4E SELFBALANCE JUMPI SWAP11 SWAP13 0xBB LT CODECOPY SLT BYTE CODESIZE LT 0xC0 0xAF PUSH13 0xFE05F59FCD2C2DD9BFF46B4C86 0x1E CODESIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "166:284:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;237:39:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;197:34:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;237:39:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;197:34:2:-;;;;;;;;;;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;655:96:1:-;708:7;734:10;727:17;;655:96;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:90::-;1562:7;1605:5;1598:13;1591:21;1580:32;;1528:90;;;:::o;1624:109::-;1705:21;1720:5;1705:21;:::i;:::-;1700:3;1693:34;1624:109;;:::o;1739:210::-;1826:4;1864:2;1853:9;1849:18;1841:26;;1877:65;1939:1;1928:9;1924:17;1915:6;1877:65;:::i;:::-;1739:210;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:225::-;2270:34;2266:1;2258:6;2254:14;2247:58;2339:8;2334:2;2326:6;2322:15;2315:33;2130:225;:::o;2361:366::-;2503:3;2524:67;2588:2;2583:3;2524:67;:::i;:::-;2517:74;;2600:93;2689:3;2600:93;:::i;:::-;2718:2;2713:3;2709:12;2702:19;;2361:366;;;:::o;2733:419::-;2899:4;2937:2;2926:9;2922:18;2914:26;;2986:9;2980:4;2976:20;2972:1;2961:9;2957:17;2950:47;3014:131;3140:4;3014:131;:::i;:::-;3006:139;;2733:419;;;:::o;3158:182::-;3298:34;3294:1;3286:6;3282:14;3275:58;3158:182;:::o;3346:366::-;3488:3;3509:67;3573:2;3568:3;3509:67;:::i;:::-;3502:74;;3585:93;3674:3;3585:93;:::i;:::-;3703:2;3698:3;3694:12;3687:19;;3346:366;;;:::o;3718:419::-;3884:4;3922:2;3911:9;3907:18;3899:26;;3971:9;3965:4;3961:20;3957:1;3946:9;3942:17;3935:47;3999:131;4125:4;3999:131;:::i;:::-;3991:139;;3718:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "271800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"feeLogs(address)": "2855",
								"nodeStorageContract()": "2574",
								"owner()": "2515",
								"renounceOwnership()": "30368",
								"transferOwnership(address)": "30775"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 655,
									"end": 751,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 655,
									"end": 751,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 708,
									"end": 715,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 744,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 727,
									"end": 744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 727,
									"end": 744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 655,
									"end": 751,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 655,
									"end": 751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 450,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 166,
									"end": 450,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 450,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220864e47579a9cbb1039121a3810c0af6cfe05f59fcd2c2dd9bff46b4c861e38f064736f6c634300081a0033",
									".code": [
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "EFE6621A"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "FD78B66D"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 450,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 166,
											"end": 450,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 197,
											"end": 231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 197,
											"end": 231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 237,
											"end": 276,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 237,
											"end": 276,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 237,
											"end": 276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 197,
											"end": 231,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 197,
											"end": 231,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 197,
											"end": 231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1562,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1611,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1612,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1720,
											"end": 1725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1705,
											"end": 1726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1705,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1826,
											"end": 1830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1877,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1877,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2347,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2334,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2337,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2588,
											"end": 2590,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2524,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2524,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2689,
											"end": 2692,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2600,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2600,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2976,
											"end": 2996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2974,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3140,
											"end": 3144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3014,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3014,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 3152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3332,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3333,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3573,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3509,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3509,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3674,
											"end": 3677,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3585,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3585,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3706,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3712,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3924,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3911,
											"end": 3920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3907,
											"end": 3925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3981,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3942,
											"end": 3959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3935,
											"end": 3982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3999,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3999,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 4137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 4137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.9.6/access/Ownable.sol",
								"@openzeppelin/contracts@4.9.6/utils/Context.sol",
								"contracts/NodeFee.sol",
								"contracts/interfaces/INodesStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"feeLogs(address)": "efe6621a",
							"nodeStorageContract()": "fd78b66d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"feeLogs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeStorageContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NodeFee.sol\":\"NodeFee\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.9.6/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts@4.9.6/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"contracts/NodeFee.sol\":{\"keccak256\":\"0xdeff2774829b4279aa7bce2637178649575879704b9313c4139ddfcbaf0bd4d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f925b00507d52260f07045c098463eacdcb75fa558b086eb37f51892056f6967\",\"dweb:/ipfs/QmfKK9MfBNDNVLyduDGAXNiBftdkAiFAcx1TPPbdr23So7\"]},\"contracts/interfaces/INodesStorage.sol\":{\"keccak256\":\"0x8b8b871eb12b5e5a7554c2e96f79d5e0b22e55268e5285929e26674b564ddf00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109af7c6871ce19155aacfa17639c8145975d332634573ad503fac5403253570\",\"dweb:/ipfs/QmSSRMJqxynD5PFnLYVPENJGkm9yxVCh8r8d21F3wgCc9j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NodeFee.sol:NodeFee",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 150,
								"contract": "contracts/NodeFee.sol:NodeFee",
								"label": "nodeStorageContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 154,
								"contract": "contracts/NodeFee.sol:NodeFee",
								"label": "feeLogs",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/INodesStorage.sol": {
				"INodesStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_nodeAddresses",
									"type": "address[]"
								}
							],
							"name": "addNodes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getValidNodes",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nodeAddress",
									"type": "address"
								}
							],
							"name": "isValidNode",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nodeAddress",
									"type": "address"
								}
							],
							"name": "removeNode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addNodes(address[])": "df9620eb",
							"getValidNodes()": "11f1ba39",
							"isValidNode(address)": "9ebd11ef",
							"removeNode(address)": "b2b99ec9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_nodeAddresses\",\"type\":\"address[]\"}],\"name\":\"addNodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValidNodes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"isValidNode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"removeNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/INodesStorage.sol\":\"INodesStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/INodesStorage.sol\":{\"keccak256\":\"0x8b8b871eb12b5e5a7554c2e96f79d5e0b22e55268e5285929e26674b564ddf00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109af7c6871ce19155aacfa17639c8145975d332634573ad503fac5403253570\",\"dweb:/ipfs/QmSSRMJqxynD5PFnLYVPENJGkm9yxVCh8r8d21F3wgCc9j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.9.6/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							142
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 143,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 142,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								142
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.9.6/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.9.6/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "Context",
							"nameLocation": "641:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "717:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "727:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:1"
									},
									"scope": 142,
									"src": "655:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "824:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "834:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "808:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:1"
									},
									"scope": 142,
									"src": "757:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "934:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 137,
												"id": 139,
												"nodeType": "Return",
												"src": "944:8:1"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "925:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:1"
									},
									"scope": 142,
									"src": "862:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 143,
							"src": "623:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:861:1"
				},
				"id": 1
			},
			"contracts/NodeFee.sol": {
				"ast": {
					"absolutePath": "contracts/NodeFee.sol",
					"exportedSymbols": {
						"Context": [
							142
						],
						"INodesStorage": [
							203
						],
						"NodeFee": [
							176
						],
						"Ownable": [
							112
						]
					},
					"id": 177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.9.6/access/Ownable.sol",
							"id": 145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 177,
							"sourceUnit": 113,
							"src": "57:58:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/INodesStorage.sol",
							"file": "contracts/interfaces/INodesStorage.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 177,
							"sourceUnit": 204,
							"src": "116:48:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 147,
										"name": "Ownable",
										"nameLocations": [
											"186:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "186:7:2"
									},
									"id": 148,
									"nodeType": "InheritanceSpecifier",
									"src": "186:7:2"
								}
							],
							"canonicalName": "NodeFee",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 176,
							"linearizedBaseContracts": [
								176,
								112,
								142
							],
							"name": "NodeFee",
							"nameLocation": "175:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fd78b66d",
									"id": 150,
									"mutability": "mutable",
									"name": "nodeStorageContract",
									"nameLocation": "212:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 176,
									"src": "197:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 149,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "197:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "efe6621a",
									"id": 154,
									"mutability": "mutable",
									"name": "feeLogs",
									"nameLocation": "269:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 176,
									"src": "237:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 153,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "245:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "237:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 152,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "256:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "303:145:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "360:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "364:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "360:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 157,
																	"name": "nodeStorageContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "327:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 156,
																"name": "INodesStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "313:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INodesStorage_$203_$",
																	"typeString": "type(contract INodesStorage)"
																}
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "313:34:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INodesStorage_$203",
																"typeString": "contract INodesStorage"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "348:11:2",
														"memberName": "isValidNode",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "313:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "313:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "313:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "389:20:2",
															"subExpression": {
																"baseExpression": {
																	"id": 165,
																	"name": "feeLogs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "390:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 168,
																"indexExpression": {
																	"expression": {
																		"id": 166,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "398:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "402:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "398:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "390:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265706f7274656420616c7265616479",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "411:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d6bd4f8fdf9999c68603e366442fdde78bc2e05f9840160e3ff0ee7b5112c1a",
																"typeString": "literal_string \"Reported already\""
															},
															"value": "Reported already"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3d6bd4f8fdf9999c68603e366442fdde78bc2e05f9840160e3ff0ee7b5112c1a",
																"typeString": "literal_string \"Reported already\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "381:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "381:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "381:49:2"
											},
											{
												"id": 173,
												"nodeType": "PlaceholderStatement",
												"src": "440:1:2"
											}
										]
									},
									"id": 175,
									"name": "onlyNode",
									"nameLocation": "292:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:2"
									},
									"src": "283:165:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 177,
							"src": "166:284:2",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "32:419:2"
				},
				"id": 2
			},
			"contracts/interfaces/INodesStorage.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/INodesStorage.sol",
					"exportedSymbols": {
						"INodesStorage": [
							203
						]
					},
					"id": 204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 178,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INodesStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "INodesStorage",
							"nameLocation": "67:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "df9620eb",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addNodes",
									"nameLocation": "96:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_nodeAddresses",
												"nameLocation": "124:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "105:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 179,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "105:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 180,
													"nodeType": "ArrayTypeName",
													"src": "105:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:35:3"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "148:0:3"
									},
									"scope": 203,
									"src": "87:62:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b2b99ec9",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeNode",
									"nameLocation": "164:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "nodeAddress",
												"nameLocation": "183:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "175:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "174:21:3"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "204:0:3"
									},
									"scope": 203,
									"src": "155:50:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "11f1ba39",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getValidNodes",
									"nameLocation": "220:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:2:3"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "259:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "259:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 192,
													"nodeType": "ArrayTypeName",
													"src": "259:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "258:18:3"
									},
									"scope": 203,
									"src": "211:66:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9ebd11ef",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidNode",
									"nameLocation": "292:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "nodeAddress",
												"nameLocation": "312:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "304:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:21:3"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "348:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:6:3"
									},
									"scope": 203,
									"src": "283:71:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 204,
							"src": "57:299:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:325:3"
				},
				"id": 3
			}
		}
	}
}